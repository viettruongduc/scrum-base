{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes, listReducer } from '../useList';\nexport default function menuReducer(state, action) {\n  if (action.type === ListActionTypes.itemHover) {\n    return state;\n  }\n\n  const newState = listReducer(state, action); // make sure an item is always highlighted\n\n  if (newState.highlightedValue === null && action.context.items.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.context.items[0]\n    });\n  }\n\n  if (action.type === ListActionTypes.keyDown) {\n    if (action.event.key === 'Escape') {\n      return _extends({}, newState, {\n        open: false\n      });\n    }\n  }\n\n  if (action.type === ListActionTypes.blur) {\n    var _action$context$listb;\n\n    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {\n      return _extends({}, newState, {\n        open: false,\n        highlightedValue: action.context.items[0]\n      });\n    }\n  }\n\n  return newState;\n}","map":{"version":3,"names":["_extends","ListActionTypes","listReducer","menuReducer","state","action","type","itemHover","newState","highlightedValue","context","items","length","keyDown","event","key","open","blur","_action$context$listb","listboxRef","current","contains","relatedTarget"],"sources":["C:/Users/TranAnhHoan/Desktop/scrum-base/client/node_modules/@mui/base/useMenu/menuReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes, listReducer } from '../useList';\nexport default function menuReducer(state, action) {\n  if (action.type === ListActionTypes.itemHover) {\n    return state;\n  }\n  const newState = listReducer(state, action);\n\n  // make sure an item is always highlighted\n  if (newState.highlightedValue === null && action.context.items.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.context.items[0]\n    });\n  }\n  if (action.type === ListActionTypes.keyDown) {\n    if (action.event.key === 'Escape') {\n      return _extends({}, newState, {\n        open: false\n      });\n    }\n  }\n  if (action.type === ListActionTypes.blur) {\n    var _action$context$listb;\n    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {\n      return _extends({}, newState, {\n        open: false,\n        highlightedValue: action.context.items[0]\n      });\n    }\n  }\n  return newState;\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,YAA7C;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;EACjD,IAAIA,MAAM,CAACC,IAAP,KAAgBL,eAAe,CAACM,SAApC,EAA+C;IAC7C,OAAOH,KAAP;EACD;;EACD,MAAMI,QAAQ,GAAGN,WAAW,CAACE,KAAD,EAAQC,MAAR,CAA5B,CAJiD,CAMjD;;EACA,IAAIG,QAAQ,CAACC,gBAAT,KAA8B,IAA9B,IAAsCJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqBC,MAArB,GAA8B,CAAxE,EAA2E;IACzE,OAAOZ,QAAQ,CAAC,EAAD,EAAKQ,QAAL,EAAe;MAC5BC,gBAAgB,EAAEJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqB,CAArB;IADU,CAAf,CAAf;EAGD;;EACD,IAAIN,MAAM,CAACC,IAAP,KAAgBL,eAAe,CAACY,OAApC,EAA6C;IAC3C,IAAIR,MAAM,CAACS,KAAP,CAAaC,GAAb,KAAqB,QAAzB,EAAmC;MACjC,OAAOf,QAAQ,CAAC,EAAD,EAAKQ,QAAL,EAAe;QAC5BQ,IAAI,EAAE;MADsB,CAAf,CAAf;IAGD;EACF;;EACD,IAAIX,MAAM,CAACC,IAAP,KAAgBL,eAAe,CAACgB,IAApC,EAA0C;IACxC,IAAIC,qBAAJ;;IACA,IAAI,EAAE,CAACA,qBAAqB,GAAGb,MAAM,CAACK,OAAP,CAAeS,UAAf,CAA0BC,OAAnD,KAA+D,IAA/D,IAAuEF,qBAAqB,CAACG,QAAtB,CAA+BhB,MAAM,CAACS,KAAP,CAAaQ,aAA5C,CAAzE,CAAJ,EAA0I;MACxI,OAAOtB,QAAQ,CAAC,EAAD,EAAKQ,QAAL,EAAe;QAC5BQ,IAAI,EAAE,KADsB;QAE5BP,gBAAgB,EAAEJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqB,CAArB;MAFU,CAAf,CAAf;IAID;EACF;;EACD,OAAOH,QAAP;AACD"},"metadata":{},"sourceType":"module"}