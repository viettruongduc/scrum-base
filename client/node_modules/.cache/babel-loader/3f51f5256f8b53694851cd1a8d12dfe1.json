{"ast":null,"code":"import { unstable_useId as useId } from '@mui/utils';\nimport { useTabsContext } from '../TabsUnstyled';\nimport { useCompoundItem } from '../utils/useCompoundItem';\n\nfunction tabPanelValueGenerator(otherTabPanelValues) {\n  return otherTabPanelValues.size;\n}\n/**\n *\n * Demos:\n *\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabPanel API](https://mui.com/base/react-tabs/hooks-api/#use-tab-panel)\n */\n\n\nfunction useTabPanel(parameters) {\n  const {\n    value: valueParam,\n    id: idParam\n  } = parameters;\n  const context = useTabsContext();\n\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n\n  const {\n    value: selectedTabValue,\n    getTabId\n  } = context;\n  const id = useId(idParam);\n  const {\n    id: value\n  } = useCompoundItem(valueParam, id, tabPanelValueGenerator);\n  const hidden = value !== selectedTabValue;\n  const correspondingTabId = value !== undefined ? getTabId(value) : undefined;\n\n  const getRootProps = () => {\n    return {\n      'aria-labelledby': correspondingTabId != null ? correspondingTabId : undefined,\n      hidden,\n      id: id != null ? id : undefined\n    };\n  };\n\n  return {\n    hidden,\n    getRootProps\n  };\n}\n\nexport default useTabPanel;","map":{"version":3,"names":["unstable_useId","useId","useTabsContext","useCompoundItem","tabPanelValueGenerator","otherTabPanelValues","size","useTabPanel","parameters","value","valueParam","id","idParam","context","Error","selectedTabValue","getTabId","hidden","correspondingTabId","undefined","getRootProps"],"sources":["C:/Users/TranAnhHoan/Desktop/scrum-base/client/node_modules/@mui/base/useTabPanel/useTabPanel.js"],"sourcesContent":["import { unstable_useId as useId } from '@mui/utils';\nimport { useTabsContext } from '../TabsUnstyled';\nimport { useCompoundItem } from '../utils/useCompoundItem';\nfunction tabPanelValueGenerator(otherTabPanelValues) {\n  return otherTabPanelValues.size;\n}\n\n/**\n *\n * Demos:\n *\n * - [Unstyled Tabs](https://mui.com/base/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabPanel API](https://mui.com/base/react-tabs/hooks-api/#use-tab-panel)\n */\nfunction useTabPanel(parameters) {\n  const {\n    value: valueParam,\n    id: idParam\n  } = parameters;\n  const context = useTabsContext();\n  if (context === null) {\n    throw new Error('No TabContext provided');\n  }\n  const {\n    value: selectedTabValue,\n    getTabId\n  } = context;\n  const id = useId(idParam);\n  const {\n    id: value\n  } = useCompoundItem(valueParam, id, tabPanelValueGenerator);\n  const hidden = value !== selectedTabValue;\n  const correspondingTabId = value !== undefined ? getTabId(value) : undefined;\n  const getRootProps = () => {\n    return {\n      'aria-labelledby': correspondingTabId != null ? correspondingTabId : undefined,\n      hidden,\n      id: id != null ? id : undefined\n    };\n  };\n  return {\n    hidden,\n    getRootProps\n  };\n}\nexport default useTabPanel;"],"mappings":"AAAA,SAASA,cAAc,IAAIC,KAA3B,QAAwC,YAAxC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AACA,SAASC,sBAAT,CAAgCC,mBAAhC,EAAqD;EACnD,OAAOA,mBAAmB,CAACC,IAA3B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,UAArB,EAAiC;EAC/B,MAAM;IACJC,KAAK,EAAEC,UADH;IAEJC,EAAE,EAAEC;EAFA,IAGFJ,UAHJ;EAIA,MAAMK,OAAO,GAAGX,cAAc,EAA9B;;EACA,IAAIW,OAAO,KAAK,IAAhB,EAAsB;IACpB,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;EACD;;EACD,MAAM;IACJL,KAAK,EAAEM,gBADH;IAEJC;EAFI,IAGFH,OAHJ;EAIA,MAAMF,EAAE,GAAGV,KAAK,CAACW,OAAD,CAAhB;EACA,MAAM;IACJD,EAAE,EAAEF;EADA,IAEFN,eAAe,CAACO,UAAD,EAAaC,EAAb,EAAiBP,sBAAjB,CAFnB;EAGA,MAAMa,MAAM,GAAGR,KAAK,KAAKM,gBAAzB;EACA,MAAMG,kBAAkB,GAAGT,KAAK,KAAKU,SAAV,GAAsBH,QAAQ,CAACP,KAAD,CAA9B,GAAwCU,SAAnE;;EACA,MAAMC,YAAY,GAAG,MAAM;IACzB,OAAO;MACL,mBAAmBF,kBAAkB,IAAI,IAAtB,GAA6BA,kBAA7B,GAAkDC,SADhE;MAELF,MAFK;MAGLN,EAAE,EAAEA,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkBQ;IAHjB,CAAP;EAKD,CAND;;EAOA,OAAO;IACLF,MADK;IAELG;EAFK,CAAP;AAID;;AACD,eAAeb,WAAf"},"metadata":{},"sourceType":"module"}