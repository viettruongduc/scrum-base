{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\n\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n\n  const uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\n\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\n\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\n\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\n\n\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height; // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n} // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\n\n\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot || // DOM Element detected.\n  node.parentNode || // ShadowRoot detected.\n  isShadowRoot(node) && node.host || // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n} // Returns the inner client rect, subtracting scrollbars if present.\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = { ...clippingAncestor\n    };\n\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n\n    rect = mutableRect;\n  }\n\n  return rectToClientRect(rect);\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\n\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n\n    if (computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n\n  if (polyfill) {\n    return polyfill(element);\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\n\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\n\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = { ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, { ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","isNode","value","Node","getNodeName","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","isElement","Element","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isClientRectVisualViewportBased","isLastTraversableNode","min","Math","max","round","getCssDimensions","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","fallback","unwrapElement","contextElement","FALLBACK_SCALE","x","y","getScale","domElement","rect","getBoundingClientRect","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","mutableRect","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","position","currentNode","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","getTrueOffsetParent","polyfill","getContainingBlock","getOffsetParent","getRectRelativeToOffsetParent","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["C:/Users/TranAnhHoan/Desktop/scrum-base/client/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    if (computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}